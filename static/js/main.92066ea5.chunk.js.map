{"version":3,"sources":["components/Heading.js","components/SongListItem.js","components/SongPlayer.js","components/Songs.js","components/App.js","index.js"],"names":["Heading","title","SongListItem","song","isCurrent","onSelect","style","background","className","onClick","src","coverUrl","alt","artist","SongPlayer","showControls","onPreviousSong","onNextSong","audioRef","useRef","audioUrl","useState","isAudioPlaying","setIsAudioPlaying","width","height","ref","controls","current","pause","play","Songs","children","App","songs","setSongs","useEffect","fetch","then","response","ok","json","currentSongIndex","setCurrentSongIndex","currentSong","handleSelectSong","selectedSong","audioIndex","findIndex","length","map","rootElement","document","getElementById","ReactDOM","render"],"mappings":"yRACO,SAASA,EAAT,GAA6B,IAAVC,EAAS,EAATA,MACxB,OAAO,6BAAKA,I,MCDP,SAASC,EAAT,GAAsD,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,SAExCC,EAAQ,CAAEC,WADGH,EAAY,gBAAkB,QAKjD,OACE,qBACEI,UAAS,uBAAkBJ,EAAY,WAAa,IACpDE,MAAOA,EACPG,QAPJ,WACEJ,EAASF,IAGT,UAKE,qBAAKK,UAAU,YAAYE,IAAKP,EAAKQ,SAAUC,IAAI,UACnD,sBAAKJ,UAAU,WAAf,UACE,sBAAMA,UAAU,YAAhB,SAA6BL,EAAKF,QAClC,sBAAMO,UAAU,aAAhB,SAA8BL,EAAKU,e,MCZpC,SAASC,EAAT,GAKH,IAAD,IAJDC,oBAIC,SAHDZ,EAGC,EAHDA,KACAa,EAEC,EAFDA,eACAC,EACC,EADDA,WAEMC,EAAWC,mBACTC,EAAuBjB,EAAvBiB,SAAUT,EAAaR,EAAbQ,SAElB,EAA4CU,oBAAS,GAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KAWA,OACE,0BAASf,UAAU,aAAnB,UACE,cAAC,EAAD,CAASP,MAAM,iBACf,qBAAKuB,MAAM,MAAMC,OAAO,MAAMf,IAAKC,EAAUC,IAAI,eACjD,uBAAOc,IAAKR,EAAyBS,SAAUZ,EAA/C,SACE,wBAAQL,IAAKU,KADYA,GAG3B,gCACE,wBAAQZ,UAAU,aAAaC,QAjBrC,WACEO,IACAO,GAAkB,IAed,qBAGCD,EACC,yBACEd,UAAU,cACVC,QAAS,WACPS,EAASU,QAAQC,QACjBN,GAAkB,IAJtB,UAOG,IAPH,MAQM,OAGN,yBACEf,UAAU,aACVC,QAAS,WACPS,EAASU,QAAQE,OACjBP,GAAkB,IAJtB,UAOG,IAPH,SAQI,OAGN,wBAAQf,UAAU,aAAaC,QAvCrC,WACEQ,IACAM,GAAkB,IAqCd,2B,MCzDD,SAASQ,EAAT,GAA8B,IAAbC,EAAY,EAAZA,SACtB,OAAO,yBAASxB,UAAU,QAAnB,SAA4BwB,I,MCK9B,SAASC,IACd,IACA,EAA0BZ,mBAAS,IAAnC,mBAAOa,EAAP,KAAcC,EAAd,KAEAC,qBAAU,WACRC,MAJU,kDAICC,MAAK,SAACC,GACXA,EAASC,IACXD,EAASE,OAAOH,KAAKH,QAGxB,IAEH,MAAgDd,mBAAS,GAAzD,mBAAOqB,EAAP,KAAyBC,EAAzB,KACMC,EAAcV,EAAMQ,GAE1B,SAASG,EAAiBC,GACxB,IAAMC,EAAab,EAAMc,WACvB,SAAC7C,GAAD,OAAUA,EAAKiB,WAAa0B,EAAa1B,YAEvC2B,GAAc,GAChBJ,EAAoBI,GAgBxB,OACE,qBAAKvC,UAAU,MAAf,SACoB,IAAjB0B,EAAMe,OACL,aAEA,qCACE,cAAC,EAAD,CACE9C,KAAMyC,EACN5B,eApBV,WAEE2B,GADiCD,EAEHR,EAAMe,OAAS,GAAKf,EAAMe,SAkBhDhC,WAdV,WAEE0B,GADiCD,EACe,GAAKR,EAAMe,WAcrD,eAAC,EAAD,WACE,cAAC,EAAD,CAAShD,MAAM,UACf,6BACGiC,EAAMgB,KAAI,SAAC/C,GAAD,OACT,cAAC,EAAD,CAEEA,KAAMA,EACNC,UAAWwC,EAAYxB,WAAajB,EAAKiB,SACzCf,SAAUwC,GAHL1C,EAAKiB,uB,UCpDtB+B,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAAC,EAAD,MAEFJ,K","file":"static/js/main.92066ea5.chunk.js","sourcesContent":["import \"./Heading.css\";\r\nexport function Heading({ title }) {\r\n  return <h1>{title}</h1>;\r\n}\r\n","import \"./SongListItem.css\";\r\nexport function SongListItem({ song, isCurrent, onSelect }) {\r\n  const background = isCurrent ? \"darkslategrey\" : \"none\";\r\n  const style = { background };\r\n  function handleClick() {\r\n    onSelect(song);\r\n  }\r\n  return (\r\n    <li\r\n      className={`SongListItem ${isCurrent ? \"selected\" : \"\"}`}\r\n      style={style}\r\n      onClick={handleClick}\r\n    >\r\n      <img className=\"songCover\" src={song.coverUrl} alt=\"cover\" />\r\n      <div className=\"songInfo\">\r\n        <span className=\"songTitle\">{song.title}</span>\r\n        <span className=\"songArtist\">{song.artist}</span>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n","import \"./SongPlayer.css\";\r\nimport { useRef, useState } from \"react\";\r\nimport { Heading } from \"./Heading\";\r\n\r\nexport function SongPlayer({\r\n  showControls = false,\r\n  song,\r\n  onPreviousSong,\r\n  onNextSong\r\n}) {\r\n  const audioRef = useRef();\r\n  const { audioUrl, coverUrl } = song;\r\n\r\n  const [isAudioPlaying, setIsAudioPlaying] = useState(false);\r\n\r\n  function handlePreviousSong() {\r\n    onPreviousSong();\r\n    setIsAudioPlaying(false);\r\n  }\r\n  function handleNextSong() {\r\n    onNextSong();\r\n    setIsAudioPlaying(false);\r\n  }\r\n\r\n  return (\r\n    <section className=\"SongPlayer\">\r\n      <Heading title=\"Music Player\" />\r\n      <img width=\"250\" height=\"250\" src={coverUrl} alt=\"Song cover\" />\r\n      <audio ref={audioRef} key={audioUrl} controls={showControls}>\r\n        <source src={audioUrl} />\r\n      </audio>\r\n      <div>\r\n        <button className=\"PrevButton\" onClick={handlePreviousSong}>\r\n          |◄\r\n        </button>\r\n        {isAudioPlaying ? (\r\n          <button\r\n            className=\"PauseButton\"\r\n            onClick={() => {\r\n              audioRef.current.pause();\r\n              setIsAudioPlaying(false);\r\n            }}\r\n          >\r\n            {\" \"}\r\n            | |{\" \"}\r\n          </button>\r\n        ) : (\r\n          <button\r\n            className=\"PlayButton\"\r\n            onClick={() => {\r\n              audioRef.current.play();\r\n              setIsAudioPlaying(true);\r\n            }}\r\n          >\r\n            {\" \"}\r\n            ►{\" \"}\r\n          </button>\r\n        )}\r\n        <button className=\"NextButton\" onClick={handleNextSong}>\r\n          ►|\r\n        </button>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","import \"./Songs.css\";\r\nexport function Songs({ children }) {\r\n  return <section className=\"Songs\">{children}</section>;\r\n}\r\n","import { useEffect, useState } from \"react\";\nimport { Heading } from \"./Heading\";\nimport { SongListItem } from \"./SongListItem\";\nimport { SongPlayer } from \"./SongPlayer\";\nimport { Songs } from \"./Songs\";\nimport \"./App.css\";\n\nexport function App() {\n  const URL = \"https://examples.devmastery.pl/songs-api/songs\";\n  const [songs, setSongs] = useState([]);\n\n  useEffect(() => {\n    fetch(URL).then((response) => {\n      if (response.ok) {\n        response.json().then(setSongs);\n      }\n    });\n  }, []);\n\n  const [currentSongIndex, setCurrentSongIndex] = useState(0);\n  const currentSong = songs[currentSongIndex];\n\n  function handleSelectSong(selectedSong) {\n    const audioIndex = songs.findIndex(\n      (song) => song.audioUrl === selectedSong.audioUrl\n    );\n    if (audioIndex >= 0) {\n      setCurrentSongIndex(audioIndex);\n    }\n  }\n\n  function handlePreviousSong() {\n    const previousCurrentSongIndex = currentSongIndex;\n    setCurrentSongIndex(\n      (previousCurrentSongIndex + songs.length - 1) % songs.length\n    );\n  }\n\n  function handleNextSong() {\n    const previousCurrentSongIndex = currentSongIndex;\n    setCurrentSongIndex((previousCurrentSongIndex + 1) % songs.length);\n  }\n\n  return (\n    <div className=\"App\">\n      {songs.length === 0 ? (\n        \"Loading...\"\n      ) : (\n        <>\n          <SongPlayer\n            song={currentSong}\n            onPreviousSong={handlePreviousSong}\n            onNextSong={handleNextSong}\n          />\n          <Songs>\n            <Heading title=\"Songs\" />\n            <ul>\n              {songs.map((song) => (\n                <SongListItem\n                  key={song.audioUrl}\n                  song={song}\n                  isCurrent={currentSong.audioUrl === song.audioUrl}\n                  onSelect={handleSelectSong}\n                />\n              ))}\n            </ul>\n          </Songs>\n        </>\n      )}\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { App } from \"./components/App\";\n\nimport \"./styles.css\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}